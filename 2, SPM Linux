SPM Linux is a Linux based operating system, built and maintained using SPM (simple package manager)
SPM is explained in the next chapter

to install SPM Linux, first we need to be in a Posix compliant system, with these packages installed:
	gcc g++ bison flex texinfo gawk zip gmp-dev mpfr-dev mpc1-dev zlib-dev git fdisk btrf-progs
then run this in a terminal:
; sudo sh install.sh

the user interface of SPM Linux is very simple
press "super" (mod+mod) or "alt+tab" to show the main menu
the main menu contains two views:
, the first view shows the list of installed GUI applications
, the second view provides a command'line (to switch to it, press any punctuation character)
	it will run the entered command, and then the menu will be closed
	the default command which will be run when empty line is entered, is "system"
using "system" one can:
	, manage session: lock, suspend, exit, reboot, poweroff
	, manage connections
	, set timezone
	, change passwords
	, manage packages
press "super" or "alt+tab" again to go to previously viewed application (if any)
press "super+backspace" or "alt+escape" to close a window

the package management process is atomic
nonetheless, to have a really fail'safe system, redundant backups are necessary
to make a portable SPM Linux for emergency, go to:
	main menu, system manager, manage packages, create a portable SPM Linux
this can also be used to create a cross'compiled SPM Linux

to run a program as root:
; sudo command
this will switch to the first available virtual terminal, shows the command at the top,
	and asks for root password
if the user is in "sudo" group and the entered password is correct,
	it returns back to previous virtual terminal, and runs the command as root

note that you can't login as root; root account is locked
this means that if a malicious program steals root password (eg by faking sudo password entry),
	it still can't run programs as root (because it can't enter the password in a virtual terminal)
also you must never type the user's password anywhere except at the login prompt
	and make sure the login prompt isn't fake, by pressing "F1" or "XF86Lock" for locking/unlocking
take a look at these:
"https://www.reddit.com/r/linuxquestions/comments/8mlil7/whats_the_point_of_the_sudo_password_prompt_if/"
"https://security.stackexchange.com/questions/119410/why-should-one-use-sudo"

to protect the computer from physical attacks, don't leave the computer with an unlocked session
in addition you must:
, somehow prevent tampering with hardware
, protect boot firmware by a password
, disable changing the storage device used for booting
these can make physical attacks more difficult, but keep this in mind:
	physical access to a computer is root access, given enough time and resources
