SPM Linux is a Linux based operating system, built and maintained using SPM (simple package manager)
SPM uses a simple and innovative method that unifies software building and package management,
	as will be explained in the next chapter

to install SPM Linux, first we need to be in a Posix compliant system, with these programs installed:
	fdisk mkfs.vfat mkfs.btrfs gnunet
for example you can boot into an Alpine Linux live system, and enter this at the command line:
; apk add btrfs-progs gnunet
when everything is ready, run this (as root) in a terminal:
; sh install.sh [<arch>]

if you want the packages to be built from source, we need these additional programs:
	git clang
then run this instead:
; sh install.sh build [<arch>]

the user interface of SPM Linux is very simple
press "super" (mod+mod) or "alt+tab" to show the application launcher
press "super" or "alt+tab" again to go to previously viewed application (if any)
the first item in application launcher is "system"; it opens the system menu:
	, session (lock, suspend, exit, reboot, poweroff)
	, connections
	, timezone
	, password
	, packages
to close focused window, press "super|alt+backspace|escape"

the package management process is atomic
nonetheless, to have a really fail'safe system, redundant backups are necessary
so make sure to install SPM Linux on a removable storage device, and keep it somewhere safe

to run a program as root:
; sudo command
this "sudo" is not the traditional one
it runs in a virtual terminal, shows the command at the top, and asks for sudo password,
	and when "enter" is pressed, returns back to previous virtual terminal
but to actually go to this virtual terminal, and enter the sudo password,
	one must press F5 or F6 or F7 or F8
this means that:
, a malicious program can't steal root password (eg by faking sudo password entry)
, to enter root password, physical access is necessary,
	because there is no other way to enter the password in a virtual terminal
	and since the root account is locked, it's not possible to use programs like "su" or "sudo" or "doas",
		to run programs as root by providing the root password
take a look at these:
"https://www.reddit.com/r/linuxquestions/comments/8mlil7/whats_the_point_of_the_sudo_password_prompt_if/"
"https://security.stackexchange.com/questions/119410/why-should-one-use-sudo"

to protect the computer from physical attacks, don't leave the computer with an unlocked session
in addition you must:
, somehow prevent tampering with hardware
, protect boot firmware by a password
, disable changing the storage device used for booting
these can make physical attacks more difficult, but keep this in mind:
	physical access to a computer is root access, given enough time and resources
